import re
import asyncio
from database import Database

async def check_keywords_in_message(message_text, keywords, stopwords):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å—Ç–æ–ø-—Å–ª–æ–≤"""
    if not message_text:
        return False
        
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–∏–ø –º–µ–¥–∏–∞ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, [—Ñ–æ—Ç–æ]),
    # —Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if re.match(r'^\[\w+\]$', message_text):
        print(f"–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –º–µ–¥–∏–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞: {message_text}")
        return False
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ–¥–∏–∞ –∏ —Ç–µ–∫—Å—Ç, —É–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å —Ç–∏–ø–∞ –º–µ–¥–∏–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    if re.match(r'^\[\w+\]\s+.+', message_text):
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—É—é —á–∞—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        clean_text = re.sub(r'^\[\w+\]\s+', '', message_text)
        print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {clean_text}")
        message_lower = clean_text.lower()
    else:
        message_lower = message_text.lower()
    
    print(f"–¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ): {message_lower}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞
    for stopword in stopwords:
        if stopword.lower() in message_lower:
            print(f"–ù–∞–π–¥–µ–Ω–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–æ: {stopword}")
            return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    for keyword in keywords:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–∞–≤–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (—Å —Å–∏–º–≤–æ–ª–æ–º +)
        if "+" in keyword:
            parts = keyword.lower().split("+")
            all_parts_found = True
            for part in parts:
                if part.strip() not in message_lower:
                    all_parts_found = False
                    break
            if all_parts_found:
                print(f"–ù–∞–π–¥–µ–Ω–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {keyword}")
                return True
        elif keyword.lower() in message_lower:
            print(f"–ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {keyword}")
            return True
    
    print("–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    return False

async def main():
    # –ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ª–æ–≥–æ–≤
    message_text = """üá∫üá∏üá∑üá∫üáÆüá∑‚ùóÔ∏è–ï—Å–ª–∏ –°–®–ê —É–¥–∞—Ä—è—Ç –ø–æ –ò—Ä–∞–Ω—É, –≤ –ú–æ—Å–∫–≤–µ —Å–æ—á—Ç—É—Ç —ç—Ç–æ—Ç —à–∞–≥ –Ω–µ–≤–µ—Ä–Ω—ã–º, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —ç—Å–∫–∞–ª–ª–∞—Ü–∏–∏ —Å–∏—Ç—É–∞—Ü–∏–∏, –∑–∞—è–≤–∏–ª RT –î–º–∏—Ç—Ä–∏–π –ü–µ—Å–∫–æ–≤.

–ü—Ä–µ—Å—Å-—Å–µ–∫—Ä–µ—Ç–∞—Ä—å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –†–§ –¥–æ–±–∞–≤–∏–ª, —á—Ç–æ —Ç–∞–∫–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–±—ã—Ç–∏–π –Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã."""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = Database()
    await db.connect()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    keywords = await db.get_keywords()
    stopwords = await db.get_stopwords()
    
    print(f"–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords}")
    print(f"–°—Ç–æ–ø-—Å–ª–æ–≤–∞: {stopwords}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    result = await check_keywords_in_message(message_text, keywords, stopwords)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {result}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è —Å–ª–æ–≤–∞ '–°–®–ê'
    if '—Å—à–∞' in message_text.lower():
        print("–°–ª–æ–≤–æ '–°–®–ê' –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞–ø—Ä—è–º—É—é")
    else:
        print("–°–ª–æ–≤–æ '–°–®–ê' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞–ø—Ä—è–º—É—é")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–º–æ–¥–∑–∏ –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
    clean_text = re.sub(r'[^\w\s]', '', message_text)
    print(f"–¢–µ–∫—Å—Ç –±–µ–∑ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤: {clean_text}")
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    await db.close()

if __name__ == "__main__":
    asyncio.run(main()) 